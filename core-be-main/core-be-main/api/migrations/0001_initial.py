# Generated by Django 4.2.1 on 2023-06-08 13:08

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="FeatureRepository",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "feature_repository",
            },
        ),
        migrations.CreateModel(
            name="Package",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "package",
            },
        ),
        migrations.CreateModel(
            name="Plan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=100)),
                (
                    "feature_repository_id",
                    models.ForeignKey(
                        db_column="feature_repository_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.featurerepository",
                    ),
                ),
            ],
            options={
                "db_table": "plan",
            },
        ),
        migrations.CreateModel(
            name="PricingMetric",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "pricing_metric",
            },
        ),
        migrations.CreateModel(
            name="PricingModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=100)),
                (
                    "package_id",
                    models.ForeignKey(
                        db_column="package_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tiers_details",
                        to="api.package",
                    ),
                ),
            ],
            options={
                "db_table": "pricing_model",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=100)),
                ("description", models.CharField(max_length=200, null=True)),
            ],
            options={
                "db_table": "product",
            },
        ),
        migrations.CreateModel(
            name="Tier",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=100)),
                (
                    "plan_id",
                    models.ForeignKey(
                        db_column="plan_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.plan",
                    ),
                ),
            ],
            options={
                "db_table": "tier",
            },
        ),
        migrations.CreateModel(
            name="PricingStructure",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=100)),
                ("custom_formula", models.TextField(null=True)),
                ("details", models.JSONField()),
                (
                    "pricing_model_id",
                    models.ForeignKey(
                        db_column="pricing_model_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pricing_model_custom_structure",
                        to="api.pricingmodel",
                    ),
                ),
            ],
            options={
                "db_table": "pricing_structure",
            },
        ),
        migrations.CreateModel(
            name="PricingModelDetails",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("details", models.JSONField()),
                (
                    "pricing_model_id",
                    models.ForeignKey(
                        db_column="pricing_model_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pricing_model_id_details",
                        to="api.pricingmodel",
                    ),
                ),
                (
                    "tier_id",
                    models.ForeignKey(
                        db_column="tier_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pricing_model_details_tier",
                        to="api.tier",
                    ),
                ),
            ],
            options={
                "db_table": "pricing_model_details",
            },
        ),
        migrations.CreateModel(
            name="PackageDetail",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("details", models.JSONField()),
                (
                    "package_id",
                    models.ForeignKey(
                        db_column="package_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="package_details",
                        to="api.package",
                    ),
                ),
                (
                    "tier_id",
                    models.ForeignKey(
                        db_column="tier_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tiers_details",
                        to="api.tier",
                    ),
                ),
            ],
            options={
                "db_table": "package_detail",
            },
        ),
        migrations.AddField(
            model_name="package",
            name="plan_id",
            field=models.ForeignKey(
                db_column="plan_id",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tiers_details",
                to="api.plan",
            ),
        ),
        migrations.AddField(
            model_name="featurerepository",
            name="product_id",
            field=models.ForeignKey(
                db_column="product_id",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="product_repositories",
                to="api.product",
            ),
        ),
        migrations.CreateModel(
            name="FeatureGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=255)),
                ("external_name", models.CharField(max_length=255)),
                ("external_description", models.CharField(max_length=255)),
                ("sort_order", models.IntegerField(null=True)),
                ("is_independent", models.BooleanField(default=False)),
                (
                    "feature_repository_id",
                    models.ForeignKey(
                        db_column="feature_repository_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.featurerepository",
                    ),
                ),
            ],
            options={
                "db_table": "feature_group",
            },
        ),
        migrations.CreateModel(
            name="Feature",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=255)),
                ("external_name", models.CharField(max_length=255)),
                ("external_description", models.CharField(max_length=255)),
                ("sort_order", models.IntegerField(null=True)),
                (
                    "feature_group_id",
                    models.ForeignKey(
                        db_column="feature_group_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.featuregroup",
                    ),
                ),
                (
                    "feature_repository_id",
                    models.ForeignKey(
                        db_column="feature_repository_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.featurerepository",
                    ),
                ),
            ],
            options={
                "db_table": "feature",
            },
        ),
    ]
